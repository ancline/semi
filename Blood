public class BloodData {
    private String bloodType;
    private String rhFactor;

    // Default constructor
    public BloodData() {
        this.bloodType = "O";
        this.rhFactor = "+";
    }

    // Overloaded constructor
    public BloodData(String bloodType, String rhFactor) {
        this.bloodType = bloodType;
        this.rhFactor = rhFactor;
    }

    // Getter methods
    public String getBloodType() {
        return bloodType;
    }

    public String getRhFactor() {
        return rhFactor;
    }

    // Setter methods
    public void setBloodType(String bloodType) {
        this.bloodType = bloodType;
    }

    public void setRhFactor(String rhFactor) {
        this.rhFactor = rhFactor;
    }
}


import java.util.Scanner;

public class TestBloodData {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Creating default object
        BloodData defaultBloodData = new BloodData();
        System.out.println("Default BloodData: " + defaultBloodData.getBloodType() + defaultBloodData.getRhFactor());

        // Asking user for input
        System.out.print("Enter blood type (A, B, AB, O): ");
        String bloodType = scanner.next();
        System.out.print("Enter Rh factor (+ or -): ");
        String rhFactor = scanner.next();

        // Creating object with user input
        BloodData userBloodData = new BloodData(bloodType, rhFactor);

        // Display updated values
        System.out.println("User BloodData: " + userBloodData.getBloodType() + userBloodData.getRhFactor());

        scanner.close();
    }
}


public class Patient {
    private int idNumber;
    private int age;
    private BloodData bloodData;

    // Default constructor
    public Patient() {
        this.idNumber = 0;
        this.age = 0;
        this.bloodData = new BloodData();  // Default blood type O+
    }

    // Overloaded constructor
    public Patient(int idNumber, int age, String bloodType, String rhFactor) {
        this.idNumber = idNumber;
        this.age = age;
        this.bloodData = new BloodData(bloodType, rhFactor);
    }

    // Getter methods
    public int getIdNumber() {
        return idNumber;
    }

    public int getAge() {
        return age;
    }

    public BloodData getBloodData() {
        return bloodData;
    }

    // Setter methods
    public void setIdNumber(int idNumber) {
        this.idNumber = idNumber;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public void setBloodData(String bloodType, String rhFactor) {
        this.bloodData = new BloodData(bloodType, rhFactor);
    }
}

import java.util.Scanner;

public class TestPatient {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Creating first patient with default values
        Patient defaultPatient = new Patient();
        System.out.println("Default Patient Data:");
        System.out.println("ID: " + defaultPatient.getIdNumber() + ", Age: " + defaultPatient.getAge() +
                ", Blood Type: " + defaultPatient.getBloodData().getBloodType() + defaultPatient.getBloodData().getRhFactor());

        // Creating second patient with user input
        System.out.print("Enter Patient ID: ");
        int id = scanner.nextInt();
        System.out.print("Enter Age: ");
        int age = scanner.nextInt();
        System.out.print("Enter Blood Type (A, B, AB, O): ");
        String bloodType = scanner.next();
        System.out.print("Enter Rh Factor (+ or -): ");
        String rhFactor = scanner.next();

        Patient userPatient = new Patient(id, age, bloodType, rhFactor);
        System.out.println("User Patient Data:");
        System.out.println("ID: " + userPatient.getIdNumber() + ", Age: " + userPatient.getAge() +
                ", Blood Type: " + userPatient.getBloodData().getBloodType() + userPatient.getBloodData().getRhFactor());

        scanner.close();
    }
}
